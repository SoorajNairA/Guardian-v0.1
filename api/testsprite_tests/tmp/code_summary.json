{
  "tech_stack": [
    "python",
    "fastapi",
    "pydantic",
    "uvicorn",
    "redis",
    "supabase",
    "httpx",
    "structlog"
  ],
  "features": [
    {
      "name": "Analyze Text",
      "description": "POST /v1/analyze analyzes input text and returns risk_score, threats_detected, and metadata.",
      "files": [
        "app/main.py",
        "app/classifier.py",
        "app/models.py",
        "app/gemini.py",
        "app/deps.py",
        "app/rate_limiter.py"
      ],
      "api_doc": {
        "openapi": "3.0.3",
        "info": {"title": "Guardian API", "version": "2.0.0"},
        "paths": {
          "/v1/analyze": {
            "post": {
              "summary": "Analyze text for threats",
              "tags": ["Analysis"],
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "text": {"type": "string"},
                        "config": {
                          "type": "object",
                          "properties": {
                            "model_version": {"type": "string"},
                            "compliance_mode": {"type": "string", "enum": ["strict", "moderate", "permissive"]}
                          }
                        }
                      },
                      "required": ["text"]
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "Analysis result",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "request_id": {"type": "string"},
                          "risk_score": {"type": "integer"},
                          "threats_detected": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "category": {"type": "string"},
                                "confidence_score": {"type": "number"},
                                "details": {"type": "string"}
                              },
                              "required": ["category", "confidence_score"]
                            }
                          },
                          "metadata": {
                            "type": "object",
                            "properties": {
                              "is_ai_generated": {"type": "boolean", "nullable": true},
                              "language": {"type": "string", "nullable": true},
                              "gemini_error": {"type": "string", "nullable": true}
                            }
                          }
                        },
                        "required": ["risk_score", "threats_detected", "metadata", "request_id"]
                      }
                    }
                  }
                },
                "401": {"description": "Unauthorized"},
                "429": {"description": "Rate limit exceeded"},
                "500": {"description": "Internal server error"}
              },
              "security": [{"apiKeyAuth": []}]
            }
          }
        },
        "components": {
          "securitySchemes": {
            "apiKeyAuth": {"type": "apiKey", "in": "header", "name": "X-API-Key"}
          }
        }
      }
    },
    {
      "name": "Health Check",
      "description": "GET /healthz returns overall and dependency health.",
      "files": ["app/main.py", "app/health_monitor.py"],
      "api_doc": {
        "openapi": "3.0.3",
        "info": {"title": "Guardian API", "version": "2.0.0"},
        "paths": {
          "/healthz": {
            "get": {
              "summary": "Get System Health",
              "responses": {"200": {"description": "OK"}, "503": {"description": "Unhealthy"}}
            }
          }
        }
      }
    },
    {
      "name": "Metrics",
      "description": "GET /metrics exposes Prometheus metrics (if enabled).",
      "files": ["app/main.py", "app/metrics_collector.py"],
      "api_doc": {
        "openapi": "3.0.3",
        "info": {"title": "Guardian API", "version": "2.0.0"},
        "paths": {
          "/metrics": {
            "get": {
              "summary": "Get Application Metrics",
              "responses": {"200": {"description": "OK"}}
            }
          }
        }
      }
    }
  ]
}

